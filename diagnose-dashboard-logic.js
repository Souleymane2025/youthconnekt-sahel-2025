const http = require('http');

console.log('üîç DIAGNOSTIC LOGIQUE DU DASHBOARD');
console.log('==================================');

// Test 1: V√©rifier l'API backend
console.log('\n1. Test de l\'API Backend...');
const apiOptions = {
    hostname: 'localhost',
    port: 8000,
    path: '/api/participants',
    method: 'GET'
};

const apiReq = http.request(apiOptions, (res) => {
    let data = '';
    res.on('data', (chunk) => {
        data += chunk;
    });
    res.on('end', () => {
        try {
            const participants = JSON.parse(data);
            console.log('‚úÖ API Backend accessible');
            console.log(`üìä Participants re√ßus: ${participants.total || participants.data?.length || 0}`);
            
            if (participants.data && participants.data.length > 0) {
                console.log('üë§ Premier participant:', participants.data[0].first_name, participants.data[0].last_name);
                console.log('üìã Structure des donn√©es:', Object.keys(participants.data[0]));
            }
            
            // Test 2: V√©rifier le dashboard
            console.log('\n2. Test du Dashboard Frontend...');
            const dashboardOptions = {
                hostname: 'localhost',
                port: 3000,
                path: '/dashboard/participants',
                method: 'GET'
            };
            
            const dashboardReq = http.request(dashboardOptions, (res) => {
                console.log('‚úÖ Dashboard accessible');
                console.log(`üìÑ Status: ${res.statusCode}`);
                
                let htmlData = '';
                res.on('data', (chunk) => {
                    htmlData += chunk;
                });
                res.on('end', () => {
                    console.log('\n3. Analyse du contenu HTML...');
                    
                    // V√©rifier si le tableau est pr√©sent
                    if (htmlData.includes('<table')) {
                        console.log('‚úÖ Tableau HTML pr√©sent');
                    } else {
                        console.log('‚ùå Tableau HTML absent');
                    }
                    
                    // V√©rifier si les donn√©es sont pr√©sentes
                    if (htmlData.includes('Aucune donn√©e')) {
                        console.log('‚ùå Message "Aucune donn√©e" d√©tect√©');
                    } else {
                        console.log('‚úÖ Pas de message "Aucune donn√©e"');
                    }
                    
                    // V√©rifier si les participants sont dans le HTML
                    if (htmlData.includes('T7 User') || htmlData.includes('Amina Saleh')) {
                        console.log('‚úÖ Donn√©es des participants pr√©sentes dans le HTML');
                    } else {
                        console.log('‚ùå Donn√©es des participants absentes du HTML');
                    }
                    
                    // V√©rifier la structure du HTML
                    if (htmlData.includes('participants.forEach')) {
                        console.log('‚úÖ Code EJS de rendu pr√©sent');
                    } else {
                        console.log('‚ùå Code EJS de rendu absent');
                    }
                    
                    console.log('\n4. DIAGNOSTIC FINAL:');
                    console.log('===================');
                    
                    if (htmlData.includes('Aucune donn√©e')) {
                        console.log('üî¥ PROBL√àME: Le dashboard affiche "Aucune donn√©e"');
                        console.log('üí° CAUSE: Le controller ne r√©cup√®re pas les donn√©es de l\'API');
                        console.log('üõ†Ô∏è SOLUTION: V√©rifier la logique du dashboardController.js');
                    } else if (htmlData.includes('<table') && !htmlData.includes('T7 User')) {
                        console.log('üü° PROBL√àME: Le tableau est pr√©sent mais vide');
                        console.log('üí° CAUSE: Les donn√©es ne sont pas pass√©es au template');
                        console.log('üõ†Ô∏è SOLUTION: V√©rifier la variable "participants" dans le controller');
                    } else if (htmlData.includes('T7 User') || htmlData.includes('Amina Saleh')) {
                        console.log('üü¢ SUCCESS: Les donn√©es sont pr√©sentes dans le HTML');
                        console.log('üí° Le probl√®me pourrait √™tre c√¥t√© CSS ou JavaScript');
                    } else {
                        console.log('üî¥ PROBL√àME: Structure HTML inattendue');
                        console.log('üí° CAUSE: Erreur dans le template EJS ou le controller');
                    }
                });
            });
            
            dashboardReq.on('error', (e) => {
                console.log('‚ùå Erreur Dashboard:', e.message);
            });
            
            dashboardReq.end();
            
        } catch (e) {
            console.log('‚ùå Erreur parsing API:', e.message);
        }
    });
});

apiReq.on('error', (e) => {
    console.log('‚ùå Erreur API:', e.message);
    console.log('üí° V√©rifiez que le backend Laravel est d√©marr√© sur le port 8000');
});

apiReq.end();








