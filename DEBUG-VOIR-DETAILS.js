// Script de d√©bogage pour la fonction "Voir les d√©tails"
// √Ä ex√©cuter dans la console du navigateur sur http://localhost:3000/admin/participants

console.log('üîç D√©bogage de la fonction "Voir les d√©tails"');

// 1. V√©rifier si les participants sont charg√©s
console.log('üìä Participants charg√©s:', participants);
console.log('üìä Nombre de participants:', participants.length);

// 2. V√©rifier si la fonction viewParticipant existe
console.log('üîß Fonction viewParticipant:', typeof viewParticipant);

// 3. V√©rifier si le modal existe
const modal = document.getElementById('viewParticipantModal');
console.log('üé≠ Modal viewParticipantModal:', modal);

// 4. V√©rifier si le contenu du modal existe
const content = document.getElementById('viewParticipantContent');
console.log('üìù Contenu du modal:', content);

// 5. Tester la fonction avec le premier participant
if (participants.length > 0) {
    console.log('üß™ Test avec le premier participant:', participants[0]);
    console.log('üß™ ID du premier participant:', participants[0].id);
    
    // Tester la fonction
    try {
        viewParticipant(participants[0].id);
        console.log('‚úÖ Fonction viewParticipant ex√©cut√©e avec succ√®s');
    } catch (error) {
        console.error('‚ùå Erreur lors de l\'ex√©cution de viewParticipant:', error);
    }
} else {
    console.log('‚ùå Aucun participant charg√©');
}

// 6. V√©rifier les fonctions auxiliaires
console.log('üîß Fonction getStatusBadgeClass:', typeof getStatusBadgeClass);
console.log('üîß Fonction getStatusText:', typeof getStatusText);

// 7. V√©rifier Bootstrap
console.log('üé® Bootstrap disponible:', typeof bootstrap !== 'undefined');

// 8. V√©rifier les erreurs dans la console
console.log('üìã V√©rifiez s\'il y a des erreurs dans la console ci-dessus');

// 9. Test manuel de la fonction
function testViewParticipant() {
    if (participants.length > 0) {
        const firstParticipant = participants[0];
        console.log('üß™ Test manuel avec participant:', firstParticipant);
        
        // Simuler le clic sur le bouton
        const participant = participants.find(p => p.id === firstParticipant.id);
        if (participant) {
            console.log('‚úÖ Participant trouv√©:', participant);
            
            // G√©n√©rer le contenu
            const content = `
                <div class="row">
                    <div class="col-md-4">
                        <div class="text-center mb-3">
                            <div class="bg-primary text-white rounded-circle d-inline-flex align-items-center justify-content-center" style="width: 80px; height: 80px;">
                                <i class="fas fa-user fa-2x"></i>
                            </div>
                            <h5 class="mt-2">${participant.first_name} ${participant.last_name}</h5>
                            <span class="badge ${getStatusBadgeClass(participant.status)}">${getStatusText(participant.status)}</span>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="row">
                            <div class="col-md-6">
                                <h6><i class="fas fa-envelope me-2"></i>Email</h6>
                                <p>${participant.email}</p>
                            </div>
                            <div class="col-md-6">
                                <h6><i class="fas fa-phone me-2"></i>T√©l√©phone</h6>
                                <p>${participant.phone}</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <h6><i class="fas fa-map-marker-alt me-2"></i>Localisation</h6>
                                <p>${participant.city}, ${participant.country}</p>
                            </div>
                            <div class="col-md-6">
                                <h6><i class="fas fa-tag me-2"></i>Type</h6>
                                <p>${participant.type === 'national' ? 'National' : 'International'}</p>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            
            console.log('üìù Contenu g√©n√©r√©:', content);
            
            // Injecter le contenu dans le modal
            const modalContent = document.getElementById('viewParticipantContent');
            if (modalContent) {
                modalContent.innerHTML = content;
                console.log('‚úÖ Contenu inject√© dans le modal');
                
                // Ouvrir le modal
                const modal = new bootstrap.Modal(document.getElementById('viewParticipantModal'));
                modal.show();
                console.log('‚úÖ Modal ouvert');
            } else {
                console.error('‚ùå √âl√©ment viewParticipantContent non trouv√©');
            }
        } else {
            console.error('‚ùå Participant non trouv√©');
        }
    } else {
        console.error('‚ùå Aucun participant disponible pour le test');
    }
}

// Exposer la fonction de test
window.testViewParticipant = testViewParticipant;

console.log('üöÄ Pour tester manuellement, ex√©cutez: testViewParticipant()');
